#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

class BattleGame
{
public:
	int HP;

public:
	BattleGame() {};
	void GetHp() { cout << "♥ 당신의 체력 : " << HP << endl; } // 플레이어의 남은 HP를 출력하는 함수
	void GetEnemyHp() { cout << "⊙ 괴물의 체력 : " << HP << endl; } // 적의 남은 HP를 출력하는 함수
	void damage(int x) { HP = HP - x; } // 객체의 HP를 감소시키는 함수
	void BattleGameStart(int x, int y) // 게임 실행 함수 (첫 번째 인수는 플레이어의 체력, 두 번째 인수는 적의 체력)
	{
		// 스토리 및 룰 설명
		cout << "---------------------------------------------------------------------------------------\n" << endl;
		cout << "당신은 어둡고 불쾌한 통로를 지나 다음 방의 입구에 도착했습니다." << endl;
		cout << "문이 소리없이 열리더니 또다시 칠흑과 같은 어둠이 펼쳐집니다." << endl;
		cout << "당신은 조심스럽게 방 안으로 들어갑니다." << endl;
		cout << "눈이 점점 어둠에 적응하자 저 멀리 방의 출구쪽에 커다란 형체가 보이기 시작합니다." << endl;
		cout << "괴물이 출구를 막은 채로 잠들어 있었습니다. 당신은 괴물을 처치하고 다음 방으로 나아가기로 결심합니다.\n" << endl;

		cout << "방의 규칙 1. 네 개의 주사위 중 하나를 선택해 굴린다." << endl;
		cout << "방의 규칙 2. 규칙 1을 두 번 더 반복한다." << endl;
		cout << "방의 규칙 3. 세 주사위 값을 모두 더한만큼 괴물에게 다가갈 수 있다. (최대 10걸음)" << endl;
		cout << "방의 규칙 4. 가까이 갈수록 괴물에게 큰 피해를 준다. 단, 걸음 수가 너무 적거나 (1~6), 10을 넘으면 당신의 체력이 감소한다.\n" << endl;
		cout << "---------------------------------------------------------------------------------------\n" << endl;

		// 플레이어와 적 객체 생성, 함수 호출 시 받은 인수를 체력으로 설정
		BattleGame player;
		BattleGame enemy;
		player.HP = x;
		enemy.HP = y;

		// 게임 진행에 필요한 변수들
		int selectNum = 0; // 주사위 번호 선택
		int diceSum = 0; // 주사위 총합
		int diceTry = 0; // 주사위 굴린 횟수 (3이 되면 주사위 굴리기 반복 종료)
		int randResult; // 랜덤값을 여기에 저장 (0~4 주사위는 나온 값 바로 사용, 1/2 확률 주사위는 경우의 수로 사용)
		int diceResult; // 경우의 수에 의해 선택된 주사위 결과값을 여기에 저장
		
		srand((unsigned int)time(NULL)); // 무작위성 극대화를 위한 시드값 설정

		// 아래 코드는 주사위 3회 선택 및 총합 계산
		while (player.HP > 0 && enemy.HP > 0)
		{
			player.GetHp();
			enemy.GetEnemyHp();
			diceSum = 0;

			while (diceTry < 3)
			{
				diceTry++;
				cout << "\n[굴릴 주사위의 번호를 입력하세요.]\n" << endl;
				cout << "▷남은 주사위 횟수 : " << 4 - diceTry << " 회" << endl;
				cout << "▶현재 주사위의 합 : " << diceSum << "\n" << endl;
				cout << "1. 0 ~ 4 주사위 " << endl;
				cout << "2. 1 or 6 주사위 " << endl;
				cout << "3. 0 or 3 주사위 " << endl;
				cout << "4. 모든 면이 5인 주사위\n " << endl;
				cout << "굴릴 주사위 번호 : " << endl;
				cin >> selectNum;

				if (selectNum == 1) // 1번 주사위를 선택할 경우
				{
					diceResult = (rand() % 5);
					diceSum = diceSum + diceResult;
					cout << "\n\n\n=====================================" << endl;
					cout << "주사위를 굴려 " << diceResult << " 이(가) 나왔습니다." << endl;
					cout << "=====================================" << endl;
				}
				else if (selectNum == 2) // 2번 주사위를 선택할 경우
				{
					randResult = (rand() % 2);
					if (randResult == 0)
					{
						diceResult = 1;
					}
					else
					{
						diceResult = 6;
					}

					diceSum = diceSum + diceResult;
					cout << "\n\n\n\n=====================================" << endl;
					cout << "주사위를 굴려 " << diceResult << " 이(가) 나왔습니다." << endl;
					cout << "=====================================" << endl;
				}
				else if (selectNum == 3) // 3번 주사위를 선택할 경우
				{

					randResult = (rand() % 2);
					if (randResult == 0)
					{
						diceResult = 0;
					}
					else
					{
						diceResult = 3;
					}

					diceSum = diceSum + diceResult;
					cout << "\n\n\n\n=====================================" << endl;
					cout << "주사위를 굴려 " << diceResult << " 이(가) 나왔습니다." << endl;
					cout << "=====================================" << endl;
				}
				else if (selectNum == 4) // 4번 주사위를 선택할 경우
				{
					diceSum = diceSum + 5;
					cout << "\n\n\n=====================================" << endl;
					cout << "주사위를 굴려 5 가 나왔습니다." << endl;
					cout << "=====================================" << endl;
				}
				else
				{
					cout << "\n\n\n==========================================" << endl;
					cout << "\nERROR : 잘못된 번호입니다. 다시 입력하세요.\n" << endl;
					cout << "==========================================" << endl;
					diceTry--;
					selectNum = 0;
				}

			}

			cout << "\n주사위의 총합은 " << diceSum << " 입니다." << endl;
			diceTry = 0;

			// 아래로 주사위 총합에 따른 데미지 판정 코드

			if (diceSum > 12) // 주사위 총합이 13이상일 경우
			{
				player.damage(2);
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
				cout << "너무 가까이 다가가서 괴물에게 강하게 공격당했습니다. 당신이 겨우 입구까지 도망가자 괴물은 다시 자리로 돌아가 잠들었습니다." << endl;
				cout << "당신의 체력이 2 감소합니다." << endl;
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
			}
			else if (diceSum == 12 || diceSum == 11) // 주사위 총합이 11~12일 경우
			{
				player.damage(1);
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
				cout << "다가가던 도중 괴물에게 들켜 공격당했습니다. 당신이 입구까지 도망가자 괴물은 다시 자리로 돌아가 잠들었습니다." << endl;
				cout << "당신의 체력이 1 감소합니다." << endl;
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
			}
			else if (diceSum == 10) // 주사위 총합이 10일 경우
			{
				enemy.damage(30);
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
				cout << "들키지않고 괴물에게 다가가 있는 힘껏 공격했습니다. 괴물은 고통에 몸부림치다가 다시 잠들었습니다." << endl;
				cout << "괴물의 체력이 30 감소합니다." << endl;
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
			}
			else if (diceSum == 9) // 주사위 총합이 9일 경우
			{
				enemy.damage(15);
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
				cout << "잠든 괴물의 몸통을 공격했습니다. 괴물은 주변에 화풀이를 하더니 다시 잠들었습니다." << endl;
				cout << "괴물의 체력이 15 감소합니다." << endl;
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
			}
			else if (diceSum == 8) // 주사위 총합이 8일 경우
			{
				enemy.damage(10);
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
				cout << "잠든 괴물의 꼬리를 공격했습니다. 괴물은 깜짝 놀라서 일어나 주변을 경계하더니 다시 잠들었습니다." << endl;
				cout << "괴물의 체력이 10 감소합니다." << endl;
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
			}
			else if (diceSum < 7) // 주사위 총합이 6이하일 경우
			{
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
				cout << "너무 조심스럽게 다가간 나머지 발을 헛디뎌 넘어졌습니다." << endl;
				cout << "당신의 체력이 1 감소합니다." << endl;
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
				player.damage(1);
			}
			else // 나머지 : 주사위 총합이 7일 경우
			{
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
				cout << "공격하기엔 너무 멉니다. 조금 더 다가가야 할 것 같습니다." << endl;
				cout << "\n----------------------------------------------------------------------------------------------------------------\n" << endl;
			}
		}

		// 게임 엔딩 (둘 중 하나의 체력이 0이 됐을 때, 주사위 반복문을 빠져나와서 엔딩 조건문)

		if (player.HP <= 0) // 패배
		{
			cout << "**********************************************************************" << endl;
			cout << "당신은 괴물을 쓰러트리지 못하고 큐브안에서 비참하게 생을 마감했습니다." << endl;
			cout << "**********************************************************************\n\n" << endl;
		}
		else // 승리
		{
			cout << "******************************************************" << endl;
			cout << "괴물은 고통에 몸부림치다가 마침내 움직임을 멈췄습니다. " << endl;
			cout << "******************************************************\n\n" << endl;
		}

	}
};

int main()
{
	BattleGame A;
	A.BattleGameStart(3,100);

	system("pause");
}
